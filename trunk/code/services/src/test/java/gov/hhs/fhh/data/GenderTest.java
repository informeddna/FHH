/**
 * 
 * Family Health History Portal 
 * END USER AGREEMENT
 * 
 * The U.S. Department of Health & Human Services (“HHS”) hereby irrevocably 
 * grants to the user a non-exclusive, royalty-free right to use, display, 
 * reproduce, and distribute this Family Health History portal software 
 * (the “software”) and prepare, use, display, reproduce and distribute 
 * derivative works thereof for any commercial or non-commercial purpose by any 
 * party, subject only to the following limitations and disclaimers, which 
 * are hereby acknowledged by the user.  
 * 
 * User agrees that it will not degrade the standards-based format of the software 
 * by materially altering the program architecture or data structure in a way 
 * that would render the data generated by the altered software incompatible 
 * with the original software. The intention of this clause is to ensure the 
 * long-term interoperability of family history information gathered by different 
 * versions of the tool.
 * 
 * User agrees that this END USER AGREEMENT will be provided to any party to 
 * whom user distributes the software, and that it will apply to the distributee.
 * 
 * User agrees that it will not use the HHS or Surgeon General logo or any HHS 
 * trademarks without permission from HHS, and will not imply endorsement of 
 * its product by HHS or the Surgeon General.
 * 
 * THIS SOFTWARE IS PROVIDED TO USER WITH NO WARRANTIES, EXPRESS OR IMPLIED, 
 * INCLUDING ANY WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, 
 * OR THAT THE USE OF THE SOFWARE WILL NOT INFRINGE ANY PATENT, COPYRIGHT, 
 * TRADEMARK OR OTHER PROPRIETARY RIGHTS.
 * 
 */
package gov.hhs.fhh.data;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNull;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import org.junit.Test;

/**
 * @author bpickeral
 *
 */
public class GenderTest {
    
    @Test
    public void testGetAsGenderNode() {
       GenderNode node = Gender.MALE.getAsGenderNode(true);
       assertEquals(Gender.MALE.getCode(), node.getCode());
       assertEquals(Gender.MALE.getCodeSystemName(), node.getCodeSystemName());
       assertEquals(Gender.MALE.getDisplayName(), node.getDisplayName());
       assertEquals(Gender.MALE.getDisplayName(), node.getOriginalText());
       
       node = Gender.MALE.getAsGenderNode(false);
       assertNull(node.getOriginalText());
       assertEquals(Gender.MALE.getCode(), node.getCode());
       assertEquals(Gender.MALE.getCodeSystemName(), node.getCodeSystemName());
       assertEquals(Gender.MALE.getDisplayName(), node.getDisplayName());
    }
    
    @Test
    public void testFromGenderNode() {
        GenderNode node = Gender.MALE.getAsGenderNode(true);
        assertEquals(Gender.MALE, Gender.fromGenderNode(node));
        
        try {
            node.setCode("does not exist");
            Gender.fromGenderNode(node);
            fail();
        } catch(Exception e) {
            // Expected
        }
    }
    
    @Test
    public void testGetResourceKey() {
        assertTrue(Gender.MALE.getResourceKey().startsWith("gender."));
    }
    
    @Test
    public void testGetName() {
        assertEquals(Gender.MALE.getName(), Gender.MALE.name());
    }
}

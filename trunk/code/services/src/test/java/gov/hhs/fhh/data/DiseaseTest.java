/**
 * 
 * Family Health History Portal 
 * END USER AGREEMENT
 * 
 * The U.S. Department of Health & Human Services ("HHS") hereby irrevocably 
 * grants to the user a non-exclusive, royalty-free right to use, display, 
 * reproduce, and distribute this Family Health History portal software 
 * (the "software") and prepare, use, display, reproduce and distribute 
 * derivative works thereof for any commercial or non-commercial purpose by any 
 * party, subject only to the following limitations and disclaimers, which 
 * are hereby acknowledged by the user.  
 * 
 * User agrees that it will not degrade the standards-based format of the software 
 * by materially altering the program architecture or data structure in a way 
 * that would render the data generated by the altered software incompatible 
 * with the original software. The intention of this clause is to ensure the 
 * long-term interoperability of family history information gathered by different 
 * versions of the tool.
 * 
 * User agrees that this END USER AGREEMENT will be provided to any party to 
 * whom user distributes the software, and that it will apply to the distributee.
 * 
 * User agrees that it will not use the HHS or Surgeon General logo or any HHS 
 * trademarks without permission from HHS, and will not imply endorsement of 
 * its product by HHS or the Surgeon General.
 * 
 * THIS SOFTWARE IS PROVIDED TO USER WITH NO WARRANTIES, EXPRESS OR IMPLIED, 
 * INCLUDING ANY WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, 
 * OR THAT THE USE OF THE SOFWARE WILL NOT INFRINGE ANY PATENT, COPYRIGHT, 
 * TRADEMARK OR OTHER PROPRIETARY RIGHTS.
 * 
 */
package gov.hhs.fhh.data;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;
import gov.hhs.fhh.data.util.DiseaseUtils;
import gov.hhs.fhh.data.util.SpanishCharacter;
import gov.hhs.mfhp.model.Observation;

import org.junit.Test;

/**
 * @author bpickeral
 *
 */
public class DiseaseTest {
    private static final String ABBREV = "abbrev";
    
    public void testCompareTo() {
        UserEnteredDisease d = new UserEnteredDisease();
        UserEnteredDisease d2 = new UserEnteredDisease();
        try {
            d.compareTo(null);
            fail();
        } catch (Exception e) {
            // Expected
        }
        // Test comparing other disease types
        assertTrue(d.compareTo(d2) == 0);
        
        d.setOriginalText("a");
        assertTrue(d.compareTo(d2) == -1);
        
        d2.setOriginalText("b");
        assertTrue(d.compareTo(d2) < 0);
        
        // Compare d is other, d2 is not
        d2.setCode(DiseaseUtils.COLON_CANCER_CODE);
        assertTrue(d.compareTo(d2) == 1);
        
        // Compare d2 is other, d is not
        d.setCode(DiseaseUtils.COLON_CANCER_CODE);
        d2.setCode(null);
        assertTrue(d.compareTo(d2) == -1);
        
        // Compare 2 system diseases 
        d.setCode(DiseaseUtils.COLON_CANCER_CODE);
        d.setAppDisplay("b");
        d2.setAppDisplay("c");
        assertTrue(d.compareTo(d2) < 0);
    }
    
    @Test
    public void testIsOther() {
        UserEnteredDisease d = new UserEnteredDisease();
        assertTrue(d.isOther());
        
        DiseaseBean b = new DiseaseBean();
        b.setCode(DiseaseUtils.BREAST_CANCER_CODE);
        assertFalse(b.isOther());
    }
 
    
    @Test
    public void testGetReportDisplay() {
        UserEnteredDisease d = new UserEnteredDisease();
        d.setOriginalText(ABBREV);
        assertEquals(ABBREV, d.getReportDisplay());
    }
    
    @Test
    public void testGetEscapedReportDisplay() {
        UserEnteredDisease d = new UserEnteredDisease();
        d.setOriginalText(SpanishCharacter.A_ACUTE.getSpanish());
        assertEquals(SpanishCharacter.A_ACUTE.getHtml(), d.getEscapedReportDisplay());
    }
    
    @Test
    public void testGetEscapedOriginalText() {
        UserEnteredDisease d = new UserEnteredDisease();
        d.setOriginalText(SpanishCharacter.A_ACUTE.getSpanish());
        assertEquals(SpanishCharacter.A_ACUTE.getHtml(), d.getEscapedOriginalText());
    }
}

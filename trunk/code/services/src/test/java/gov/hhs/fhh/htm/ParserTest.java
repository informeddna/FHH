/**
 * 
 * Family Health History Portal 
 * END USER AGREEMENT
 * 
 * The U.S. Department of Health & Human Services ("HHS") hereby irrevocably 
 * grants to the user a non-exclusive, royalty-free right to use, display, 
 * reproduce, and distribute this Family Health History portal software 
 * (the "software") and prepare, use, display, reproduce and distribute 
 * derivative works thereof for any commercial or non-commercial purpose by any 
 * party, subject only to the following limitations and disclaimers, which 
 * are hereby acknowledged by the user.  
 * 
 * User agrees that it will not degrade the standards-based format of the software 
 * by materially altering the program architecture or data structure in a way 
 * that would render the data generated by the altered software incompatible 
 * with the original software. The intention of this clause is to ensure the 
 * long-term interoperability of family history information gathered by different 
 * versions of the tool.
 * 
 * User agrees that this END USER AGREEMENT will be provided to any party to 
 * whom user distributes the software, and that it will apply to the distributee.
 * 
 * User agrees that it will not use the HHS or Surgeon General logo or any HHS 
 * trademarks without permission from HHS, and will not imply endorsement of 
 * its product by HHS or the Surgeon General.
 * 
 * THIS SOFTWARE IS PROVIDED TO USER WITH NO WARRANTIES, EXPRESS OR IMPLIED, 
 * INCLUDING ANY WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, 
 * OR THAT THE USE OF THE SOFWARE WILL NOT INFRINGE ANY PATENT, COPYRIGHT, 
 * TRADEMARK OR OTHER PROPRIETARY RIGHTS.
 * 
 */
package gov.hhs.fhh.htm;


import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import org.junit.Test;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;

/**
 * @author bhumphrey
 *
 */
public class ParserTest {

    
    @Test
    public void testParseHtml() throws IOException {
       File testFile =  new File(this.getClass().getResource("/test1.html").getPath());
       FileInputStream fis = new FileInputStream(testFile);
       
       assertNotNull(fis);
       
       assertTrue(fis.available() > 0);
       
       Parser parser = new CobraParser();
       
       Document document = parser.parse(fis);
       
       assertNotNull(document);
       
      
        NodeList nodeList = document.getElementsByTagName("input");
        int length = nodeList.getLength();
        assertTrue(length > 0);
    }
    
    @Test
    public void testBuild() throws IOException {
        File testFile =  new File(this.getClass().getResource("/test1.html").getPath());
        FileInputStream fis = new FileInputStream(testFile);
        
        assertNotNull(fis);
        
        assertTrue(fis.available() > 0);
        
        Builder<InputNode> builder = new CobraBuilder<InputNode>();
        List<InputNode> result = new ArrayList<InputNode>();
        
        builder.build(fis, result, new HiddenInput());
        
        assertTrue(result.size() > 0);
        
        for(InputNode inputNode: result) {
            assertNotNull( inputNode.getName() );
            assertNotNull( inputNode.getValue());
            assertNotNull(inputNode.getNode());
        }
        
        // Assert Exception is thrown with null input stream
        try {
            builder.build(null, result, new HiddenInput());
            fail();
        } catch (Exception e) {
            // Expected
        }
    }
    
}


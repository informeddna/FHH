/**
 * 
 * Family Health History Portal 
 * END USER AGREEMENT
 * 
 * The U.S. Department of Health & Human Services ("HHS") hereby irrevocably 
 * grants to the user a non-exclusive, royalty-free right to use, display, 
 * reproduce, and distribute this Family Health History portal software 
 * (the "software") and prepare, use, display, reproduce and distribute 
 * derivative works thereof for any commercial or non-commercial purpose by any 
 * party, subject only to the following limitations and disclaimers, which 
 * are hereby acknowledged by the user.  
 * 
 * User agrees that it will not degrade the standards-based format of the software 
 * by materially altering the program architecture or data structure in a way 
 * that would render the data generated by the altered software incompatible 
 * with the original software. The intention of this clause is to ensure the 
 * long-term interoperability of family history information gathered by different 
 * versions of the tool.
 * 
 * User agrees that this END USER AGREEMENT will be provided to any party to 
 * whom user distributes the software, and that it will apply to the distributee.
 * 
 * User agrees that it will not use the HHS or Surgeon General logo or any HHS 
 * trademarks without permission from HHS, and will not imply endorsement of 
 * its product by HHS or the Surgeon General.
 * 
 * THIS SOFTWARE IS PROVIDED TO USER WITH NO WARRANTIES, EXPRESS OR IMPLIED, 
 * INCLUDING ANY WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, 
 * OR THAT THE USE OF THE SOFWARE WILL NOT INFRINGE ANY PATENT, COPYRIGHT, 
 * TRADEMARK OR OTHER PROPRIETARY RIGHTS.
 * 
 */
package gov.hhs.fhh.service;

import gov.hhs.fhh.data.Disease;
import gov.hhs.fhh.data.Ethnicity;
import gov.hhs.fhh.data.Person;
import gov.hhs.fhh.data.Race;
import gov.hhs.mfhp.model.Observation;

import java.io.File;
import java.util.List;

import javax.ejb.Local;


/**
 * @author bpickeral
 *
 */
@Local
public interface PersonServiceLocal extends GenericServiceLocal {
    /**
     * Returns a list of all races.
     * @return the list of races
     */
    List<Race> getRaces();
    
    /**
     * Returns a list of all Asian races.
     * @return the list of Asian races
     */
    List<Race> getAsianRaces();
    
    /**
     * Returns a list of all Hawaiian races.
     * @return the list of Hawaiian races
     */
    List<Race> getHawaiianRaces();
    
    /**
     * Returns a list of all ethnicities.
     * @return the list of ethnicities
     */
    List<Ethnicity> getEthnicities();
    
    /**
     * Returns a list of all Hispanic ethnicities.
     * @return the list of Hispanic ethnicities
     */
    List<Ethnicity> getHispanicEthnicities();
    
    /**
     * Returns a list of all primary diseases.
     * @return the list of diseases
     */
    List<Disease> getDiseases();
    
    /**
     * Returns a list of disease that are sub types of the selected disease.
     * @param disease the selected disease
     * @return the list of diseases
     */
    List<Disease> getDiseaseSubTypes(Long disease);
    
    /**
     * Returns a list of all diseases.
     * @return the list of diseases
     */
    List<Disease> getAllDiseases();
    
    /**
     * Returns a list of all diseases that has an appDisplay that contains String
     *  <code>name</code>.
     * @param diseaseName String to search for
     * @return the list of diseases containing String name
     */
    List<Disease> getDiseaseByName(String diseaseName);
    
    
    /**
     * @param code - the ethnicity code.
     * @param codeSystem - the code system name of the ethnicity code.
     * @return - the list of ethnicities matching the code and code systemname.
     */
    List<Ethnicity> getEthnicityByCodeAndCodeSystem(String code, String codeSystem);
    
    
    /**
     * @param code - the race code.
     * @param codeSystem - the code system name of the race code.
     * @return - the list of races matching the code and code system name.
     */
    List<Race> getRaceByCodeAndCodeSystem(String code, String codeSystem);
    
    
    /**
     * @param file the stream to extract the file contents to import
     * @return the import result
     * @throws ImportException if any errors occur
     */
    Person importFile(File file) throws ImportException;

    /**
     * @param result the person to populate Race and Ethnicity ids
     */
    void deepPopulateRaceEthnicityIds(Person result);
    
    
    /**
     * @return the disease with the observation name of 'Other disease type'
     */
    Disease getOtherDisease();

    /**
     *  
     * @param o observation to check
     * @return true if observation has a parent of diabetestype.
     */
    boolean isDiabetes(Observation o);

    /**
     * 
     * @return the disease with the observation name of 'Diabetes type'
     */
    Disease getDiabetesType();

    /**
     * 
     * @param o an observation
     * @return true if the observation is of type heart disease
     */
    boolean isHeartDisease(Observation o);

    /**
     * 
     * @return the disease with the observation name 'Heart Disease type'
     */
    Disease getHeartDiseaseType();

    /**
     * 
     * @return the disease with the observation name 'Stroke/Brain Attack'
     */
    Disease getStrokeBrainAttack();

    /**
     * 
     * @param o an observation
     * @return true if the observation is of type stroke or brain attak
     */
    boolean isStrokeOrBrainAttack(Observation o);

    /**
     * 
     * @param o an observation
     * @return true if the observation is considered colorectal cancer
     */
    boolean isColorectalCancer(Observation o);

    /**
     * 
     * @return a list of cancers that qualify as colorectal cancers
     */
    List<Observation> getColorectalCancers();
    
    /**
     * 
     * @param codeName code for the disease to find
     * @return a list of observations that match this code - should be 1 but might be multiple
     */
    List<Observation> getDiseaseByCode(String codeName);

    /**
     * 
     * @param o observation to be tested
     * @return true if this observation is breast cancer
     */
    boolean isBreastCancer(Observation o);

    /**
     * 
     * @param o observation to be tested
     * @return true if this observation
     */
    boolean isOvarianCancer(Observation o);


}

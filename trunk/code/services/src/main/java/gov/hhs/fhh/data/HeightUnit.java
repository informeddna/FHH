/**
 * 
 * Family Health History Portal 
 * END USER AGREEMENT
 * 
 * The U.S. Department of Health & Human Services (“HHS”) hereby irrevocably 
 * grants to the user a non-exclusive, royalty-free right to use, display, 
 * reproduce, and distribute this Family Health History portal software 
 * (the “software”) and prepare, use, display, reproduce and distribute 
 * derivative works thereof for any commercial or non-commercial purpose by any 
 * party, subject only to the following limitations and disclaimers, which 
 * are hereby acknowledged by the user.  
 * 
 * User agrees that it will not degrade the standards-based format of the software 
 * by materially altering the program architecture or data structure in a way 
 * that would render the data generated by the altered software incompatible 
 * with the original software. The intention of this clause is to ensure the 
 * long-term interoperability of family history information gathered by different 
 * versions of the tool.
 * 
 * User agrees that this END USER AGREEMENT will be provided to any party to 
 * whom user distributes the software, and that it will apply to the distributee.
 * 
 * User agrees that it will not use the HHS or Surgeon General logo or any HHS 
 * trademarks without permission from HHS, and will not imply endorsement of 
 * its product by HHS or the Surgeon General.
 * 
 * THIS SOFTWARE IS PROVIDED TO USER WITH NO WARRANTIES, EXPRESS OR IMPLIED, 
 * INCLUDING ANY WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, 
 * OR THAT THE USE OF THE SOFWARE WILL NOT INFRINGE ANY PATENT, COPYRIGHT, 
 * TRADEMARK OR OTHER PROPRIETARY RIGHTS.
 * 
 */
package gov.hhs.fhh.data;

/**
 * @author bhumphrey
 *
 */
public enum HeightUnit {

    /**
     * US unit (inches).
     */
    US("inches"),
    
    /**
     * Metric Unit (centimeters).
     */
    METRIC("centimeters");
    
    private static final String RESOURCE_KEY_PREFIX = "heightUnit.";
    
    private final String displayName;
    
    private HeightUnit(String displayName) {
        this.displayName = displayName;
    }
    
    /**
     * Converts the given String unit value from the XML import to the corresponding HeightUnit constant. 
     * Returns null if no match is found.
     * @param unit the unit of measurement to convert to a HeightUnit.
     * @return the corresponding WeightUnit constant
     */
    public static HeightUnit fromUnit(String unit) {
        for (HeightUnit heightUnit : HeightUnit.values()) {
            if (heightUnit.getDisplayName().equals(unit)) {
                return heightUnit;
            }
        }
        throw new IllegalArgumentException("No HeightUnit found with unit " + unit);
    }
    
    /**
     * @return the resourceKey
     */
    public String getResourceKey() {
        return RESOURCE_KEY_PREFIX + displayName;
    }

    /**
     * @return the displayName
     */
    public String getDisplayName() {
        return displayName;
    }
    
    
}

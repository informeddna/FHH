/**
 * 
 * Family Health History Portal 
 * END USER AGREEMENT
 * 
 * The U.S. Department of Health & Human Services (“HHS”) hereby irrevocably 
 * grants to the user a non-exclusive, royalty-free right to use, display, 
 * reproduce, and distribute this Family Health History portal software 
 * (the “software”) and prepare, use, display, reproduce and distribute 
 * derivative works thereof for any commercial or non-commercial purpose by any 
 * party, subject only to the following limitations and disclaimers, which 
 * are hereby acknowledged by the user.  
 * 
 * User agrees that it will not degrade the standards-based format of the software 
 * by materially altering the program architecture or data structure in a way 
 * that would render the data generated by the altered software incompatible 
 * with the original software. The intention of this clause is to ensure the 
 * long-term interoperability of family history information gathered by different 
 * versions of the tool.
 * 
 * User agrees that this END USER AGREEMENT will be provided to any party to 
 * whom user distributes the software, and that it will apply to the distributee.
 * 
 * User agrees that it will not use the HHS or Surgeon General logo or any HHS 
 * trademarks without permission from HHS, and will not imply endorsement of 
 * its product by HHS or the Surgeon General.
 * 
 * THIS SOFTWARE IS PROVIDED TO USER WITH NO WARRANTIES, EXPRESS OR IMPLIED, 
 * INCLUDING ANY WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, 
 * OR THAT THE USE OF THE SOFWARE WILL NOT INFRINGE ANY PATENT, COPYRIGHT, 
 * TRADEMARK OR OTHER PROPRIETARY RIGHTS.
 * 
 */
package gov.hhs.fhh.data;

import gov.hhs.fhh.data.util.htmimport.InputNode;


/**
 * Enumeration of possible genders.
 * @author dkokotov
 */
public enum Gender {
    /**
     * Male gender.
     */
    MALE("248153007", "SNOMED_CT", "male", "Male"),
    
    /**
     * Female gender.
     */
    FEMALE("248152002", "SNOMED_CT", "female", "Female");
    
    private static final String RESOURCE_KEY_PREFIX = "gender.";
    
    private final String code;
    private final String codeSystemName;
    private final String displayName;
    private final String htmValue;
    
    private Gender(String code, String codeSystemName, String displayName, String htmValue) {
        this.code = code;
        this.codeSystemName = codeSystemName;
        this.displayName = displayName;
        this.htmValue = htmValue;
    }

    /**
     * @param userEntered boolean representing if Gender was user entered
     * @return a GenderNode instance corresponding to this gender constant.
     */
    public GenderNode getAsGenderNode(boolean userEntered) {
        return new GenderNode(this.code, this.codeSystemName, this.displayName, userEntered);
    }
    
    /**
     * Converts the given GenderNode to the corresponding gender constant. The matching is done by code.
     * Throws an IllegalArgumentException if no match is found.
     * @param genderNode the genderNode to convert to a Gender.
     * @return the corresponding Gender constant
     */
    public static Gender fromGenderNode(GenderNode genderNode) {
        for (Gender gender : Gender.values()) {
            if (gender.getCode().equals(genderNode.getCode())) {
                return gender;
            }
        }
        throw new IllegalArgumentException("No gender found with code " + genderNode.getCode());
    }
    
    /**
     * Converts the given htm InputNode to the corresponding gender constant. The matching is done by htmValue.
     * Returns null if no match is found.
     * @param inputNode the inputNode to convert to a Gender.
     * @return the corresponding Gender constant
     */
    public static Gender fromHTMInputNode(InputNode inputNode) {
        for (Gender gender : Gender.values()) {
            if (gender.getHtmValue().equals(inputNode.getValue())) {
                return gender;
            }
        }
        return null;
    }
    
    /**
     * @return the resourceKey
     */
    public String getResourceKey() {
        return RESOURCE_KEY_PREFIX + displayName;
    }

    /**
     * @return the code
     */
    public String getCode() {
        return code;
    }

    /**
     * @return the codeSystemName
     */
    public String getCodeSystemName() {
        return codeSystemName;
    }

    /**
     * @return the displayName
     */
    public String getDisplayName() {
        return displayName;
    }    
    
    /**
     * @return the name of this Gender constant - used for struts2 bean-type access
     */
    public String getName() {
        return name();
    }

    /**
     * @return the htmValue
     */
    public String getHtmValue() {
        return htmValue;
    }
}

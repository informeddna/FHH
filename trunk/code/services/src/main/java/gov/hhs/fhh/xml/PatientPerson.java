/**
 * 
 * Family Health History Portal 
 * END USER AGREEMENT
 * 
 * The U.S. Department of Health & Human Services ("HHS") hereby irrevocably 
 * grants to the user a non-exclusive, royalty-free right to use, display, 
 * reproduce, and distribute this Family Health History portal software 
 * (the "software") and prepare, use, display, reproduce and distribute 
 * derivative works thereof for any commercial or non-commercial purpose by any 
 * party, subject only to the following limitations and disclaimers, which 
 * are hereby acknowledged by the user.  
 * 
 * User agrees that it will not degrade the standards-based format of the software 
 * by materially altering the program architecture or data structure in a way 
 * that would render the data generated by the altered software incompatible 
 * with the original software. The intention of this clause is to ensure the 
 * long-term interoperability of family history information gathered by different 
 * versions of the tool.
 * 
 * User agrees that this END USER AGREEMENT will be provided to any party to 
 * whom user distributes the software, and that it will apply to the distributee.
 * 
 * User agrees that it will not use the HHS or Surgeon General logo or any HHS 
 * trademarks without permission from HHS, and will not imply endorsement of 
 * its product by HHS or the Surgeon General.
 * 
 * THIS SOFTWARE IS PROVIDED TO USER WITH NO WARRANTIES, EXPRESS OR IMPLIED, 
 * INCLUDING ANY WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, 
 * OR THAT THE USE OF THE SOFWARE WILL NOT INFRINGE ANY PATENT, COPYRIGHT, 
 * TRADEMARK OR OTHER PROPRIETARY RIGHTS.
 * 
 */
package gov.hhs.fhh.xml;

import gov.hhs.fhh.data.Ethnicity;
import gov.hhs.fhh.data.Race;
import gov.hhs.fhh.data.Relative;
import gov.hhs.fhh.model.mfhp.castor.ClinicalObservationsNode;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.UUID;

import com.fiveamsolutions.hl7.model.mfhp.GenderNode;

/**
 * @author Brian Pickeral
 */
public class PatientPerson {
    private String name;
    private Date dateOfBirth;
    private String multipleBirthIndicator;
    private GenderNode genderNode;
    private List<Ethnicity> ethnicities = new ArrayList<Ethnicity>();
    private List<Race> races = new ArrayList<Race>();
    private ClinicalObservationsNode clinicalObservationsNode;
    private List<Relative> relatives = new ArrayList<Relative>();
    private UUID id;

    /**
     * Default constructor.
     */
    public PatientPerson() {
        // Constructor needed by Castor
    }

    /**
     * @return the name
     */
    public String getName() {
        return name;
    }

    /**
     * @param name the name to set
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * @return the dateOfBirth
     */
    public Date getDateOfBirth() {
        return dateOfBirth;
    }

    /**
     * @param dateOfBirth the dateOfBirth to set
     */
    public void setDateOfBirth(Date dateOfBirth) {
        this.dateOfBirth = dateOfBirth;
    }

    /**
     * @return the multipleBirthIndicator
     */
    public String getMultipleBirthIndicator() {
        return multipleBirthIndicator;
    }

    /**
     * @param multipleBirthIndicator the multipleBirthIndicator to set
     */
    public void setMultipleBirthIndicator(String multipleBirthIndicator) {
        this.multipleBirthIndicator = multipleBirthIndicator;
    }

    /**
     * @return the genderNode
     */
    public GenderNode getGenderNode() {
        return genderNode;
    }

    /**
     * @param genderNode the genderNode to set
     */
    public void setGenderNode(GenderNode genderNode) {
        this.genderNode = genderNode;
    }

    /**
     * @return the ethnicities
     */
    public List<Ethnicity> getEthnicities() {
        return ethnicities;
    }

    /**
     * @param ethnicities the ethnicities to set
     */
    public void setEthnicities(List<Ethnicity> ethnicities) {
        this.ethnicities = ethnicities;
    }

    /**
     * @return the races
     */
    public List<Race> getRaces() {
        return races;
    }

    /**
     * @param races the races to set
     */
    public void setRaces(List<Race> races) {
        this.races = races;
    }

    /**
     * @return the clinicalObservationsNode
     */
    public ClinicalObservationsNode getClinicalObservationsNode() {
        return clinicalObservationsNode;
    }

    /**
     * @param clinicalObservationsNode the clinicalObservationsNode to set
     */
    public void setClinicalObservationsNode(ClinicalObservationsNode clinicalObservationsNode) {
        this.clinicalObservationsNode = clinicalObservationsNode;
    }

    /**
     * @return the relatives
     */
    public List<Relative> getRelatives() {
        return relatives;
    }

    /**
     * @param relatives the relatives to set
     */
    public void setRelatives(List<Relative> relatives) {
        this.relatives = relatives;
    }

    /**
     * @return the id
     */
    public UUID getId() {
        return id;
    }

    /**
     * @param id the id to set
     */
    public void setId(UUID id) {
        this.id = id;
    }

    
}

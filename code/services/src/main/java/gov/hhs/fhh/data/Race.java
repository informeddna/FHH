/**
 * 
 * Family Health History Portal 
 * END USER AGREEMENT
 * 
 * The U.S. Department of Health & Human Services ("HHS") hereby irrevocably 
 * grants to the user a non-exclusive, royalty-free right to use, display, 
 * reproduce, and distribute this Family Health History portal software 
 * (the "software") and prepare, use, display, reproduce and distribute 
 * derivative works thereof for any commercial or non-commercial purpose by any 
 * party, subject only to the following limitations and disclaimers, which 
 * are hereby acknowledged by the user.  
 * 
 * User agrees that it will not degrade the standards-based format of the software 
 * by materially altering the program architecture or data structure in a way 
 * that would render the data generated by the altered software incompatible 
 * with the original software. The intention of this clause is to ensure the 
 * long-term interoperability of family history information gathered by different 
 * versions of the tool.
 * 
 * User agrees that this END USER AGREEMENT will be provided to any party to 
 * whom user distributes the software, and that it will apply to the distributee.
 * 
 * User agrees that it will not use the HHS or Surgeon General logo or any HHS 
 * trademarks without permission from HHS, and will not imply endorsement of 
 * its product by HHS or the Surgeon General.
 * 
 * THIS SOFTWARE IS PROVIDED TO USER WITH NO WARRANTIES, EXPRESS OR IMPLIED, 
 * INCLUDING ANY WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, 
 * OR THAT THE USE OF THE SOFWARE WILL NOT INFRINGE ANY PATENT, COPYRIGHT, 
 * TRADEMARK OR OTHER PROPRIETARY RIGHTS.
 * 
 */
package gov.hhs.fhh.data;

import java.util.Map;

import javax.persistence.CascadeType;
import javax.persistence.DiscriminatorColumn;
import javax.persistence.DiscriminatorType;
import javax.persistence.DiscriminatorValue;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.ManyToOne;
import javax.persistence.MapKey;
import javax.persistence.OneToMany;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.hibernate.annotations.ForeignKey;

import com.fiveamsolutions.nci.commons.data.persistent.PersistentObject;

/**
 * @author lpower
 * 
 */
@Entity(name = "race")
@org.hibernate.annotations.Entity(mutable = false)
@Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE) // Unit tests write, so cannot use read-only
@Inheritance(strategy = InheritanceType.SINGLE_TABLE)
@DiscriminatorColumn(
  name = "subType",
  discriminatorType = DiscriminatorType.STRING)
@DiscriminatorValue("Race")
public class Race extends AbstractCodeable implements PersistentObject {
    private static final long serialVersionUID = 273292999326299995L;
    private Race parent;

    /**
     * Default constructor.
     */
    public Race() {
        //default constructor
        super();
    }

    /**
     * Copy constructor.
     * @param c the Race object to copy from.
     */
    public Race(Race c) {
        super(c);
        this.parent = c.parent;
    }

    /**
     * @return the parent
     */
    @ManyToOne(cascade = {CascadeType.ALL })
    @ForeignKey(name = "race_parent_fk")
    public Race getParent() {
        return parent;
    }

    /**
     * @param parent the parent to set
     */
    public void setParent(Race parent) {
        this.parent = parent;
    }
    
    /**
     * @return the displayStrings
     */
    @MapKey(name = "language")
    @OneToMany(cascade = {CascadeType.ALL }, fetch = FetchType.EAGER)
    @ForeignKey(name = "race_codeable_fk", inverseName = "race_displaystring_fk")
    @Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)  // Unit tests write, so cannot use read-only
    @SuppressWarnings("PMD.UselessOverridingMethod")    
    public Map<String, DisplayString> getDisplayStrings() {
        return super.getDisplayStrings();
    }

}
/**
 * 
 * Family Health History Portal 
 * END USER AGREEMENT
 * 
 * The U.S. Department of Health & Human Services ("HHS") hereby irrevocably 
 * grants to the user a non-exclusive, royalty-free right to use, display, 
 * reproduce, and distribute this Family Health History portal software 
 * (the "software") and prepare, use, display, reproduce and distribute 
 * derivative works thereof for any commercial or non-commercial purpose by any 
 * party, subject only to the following limitations and disclaimers, which 
 * are hereby acknowledged by the user.  
 * 
 * User agrees that it will not degrade the standards-based format of the software 
 * by materially altering the program architecture or data structure in a way 
 * that would render the data generated by the altered software incompatible 
 * with the original software. The intention of this clause is to ensure the 
 * long-term interoperability of family history information gathered by different 
 * versions of the tool.
 * 
 * User agrees that this END USER AGREEMENT will be provided to any party to 
 * whom user distributes the software, and that it will apply to the distributee.
 * 
 * User agrees that it will not use the HHS or Surgeon General logo or any HHS 
 * trademarks without permission from HHS, and will not imply endorsement of 
 * its product by HHS or the Surgeon General.
 * 
 * THIS SOFTWARE IS PROVIDED TO USER WITH NO WARRANTIES, EXPRESS OR IMPLIED, 
 * INCLUDING ANY WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE, 
 * OR THAT THE USE OF THE SOFWARE WILL NOT INFRINGE ANY PATENT, COPYRIGHT, 
 * TRADEMARK OR OTHER PROPRIETARY RIGHTS.
 * 
 */
package gov.hhs.fhh.data;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;

import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

import com.fiveamsolutions.nci.commons.data.persistent.PersistentObject;

/**
 * Holds the strings used to display the value of another object, in general or in select lists.  This object should
 * be mapped to the appropriate language.
 * @author Steve Lustbader
 */
@Entity(name = "displaystring")
public class DisplayString implements PersistentObject {

    private Long id;

    private String language;
    private String displayName;
    private String appDisplay;

    /**
     * Default constructor.
     */
    public DisplayString() {
        // default construct
    }

    /**
     * Copy constructor.
     * @param ds DisplayString to copy
     */
    public DisplayString(DisplayString ds) {
        this.language = ds.language;
        this.displayName = ds.displayName;
        this.appDisplay = ds.appDisplay;
    }

    /**
     * Construct a new DisplayString.
     * @param language language to set
     * @param displayName displayName to set
     * @param appDisplay appDisplay to set
     */
    public DisplayString(String language, String displayName, String appDisplay) {
        this.language = language;
        this.displayName = displayName;
        this.appDisplay = appDisplay;
    }

    /**
     * @return the id
     */
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    @Column(name = "id")
    public Long getId() {
        return this.id;
    }

    /**
     * @param id the id to set
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * @return the language
     */
    @NotNull
    @Length(max = AbstractCodeable.CODE_LENGTH)
    public String getLanguage() {
        return language;
    }

    /**
     * @param language the language to set
     */
    public void setLanguage(String language) {
        this.language = language;
    }

    /**
     * @return the displayName
     */
    @Length(max = AbstractCodeable.NAME_LENGTH)
    public String getDisplayName() {
        return displayName;
    }

    /**
     * @param displayName the displayName to set
     */
    public void setDisplayName(String displayName) {
        this.displayName = displayName;
    }

    /**
     * String displayed in drop-downs/lists.
     * @return the appDisplay
     */
    @Length(max = AbstractCodeable.NAME_LENGTH)
    public String getAppDisplay() {
        return appDisplay;
    }

    /**
     * @param appDisplay the appDisplay to set
     */
    public void setAppDisplay(String appDisplay) {
        this.appDisplay = appDisplay;
    }

}
